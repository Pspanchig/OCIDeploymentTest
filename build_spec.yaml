version: 0.1
component: build
timeoutInSeconds: 1800
runAs: root
shell: bash

env:
  variables:
    NODE_MAJOR: "22"               # 18/20/22 según tu proyecto
    BUCKET_NAME: "my-react-site"   # bucket de Object Storage

steps:
  - name: Métricas iniciales (CPU/RAM/Disco)
    type: Command
    command: |
      set -euo pipefail
      echo "=== METRICAS INICIALES ==="
      echo "CPUs: $(nproc)"
      echo "Memoria (MB):"; free -m || true
      echo "Disco:"; df -h || true
      echo "Top snapshot:"; top -b -n 1 | head -n 20 || true

  - name: Instalar Node.js con nvm
    type: Command
    command: |
      curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh -o /tmp/install-nvm.sh
      bash /tmp/install-nvm.sh
      export NVM_DIR="$HOME/.nvm"
      . "$NVM_DIR/nvm.sh"
      nvm install 22
      nvm use 22
      node -v && npm -v

  - name: Instalar dependencias
    type: Command
    command: |
      set -euo pipefail
      export NVM_DIR="$HOME/.nvm"; . "$NVM_DIR/nvm.sh"; nvm use default
      if [ -f package-lock.json ]; then npm ci; else npm install; fi

  - name: Compilar aplicación
    type: Command
    command: |
      set -euo pipefail
      export NVM_DIR="$HOME/.nvm"; . "$NVM_DIR/nvm.sh"; nvm use default
      npm run build

  - name: Métricas post-build
    type: Command
    command: |
      set -euo pipefail
      echo "=== METRICAS POST-BUILD ==="
      free -m || true
      df -h || true

  - name: Subir a Object Storage
    type: Command
    command: |
      set -euo pipefail
      export OCI_CLI_AUTH=resource_principal
      # opcional: limpiar bucket antes de subir
      oci os object bulk-delete -bn "${BUCKET_NAME}" --force --quiet || true
      oci os object bulk-upload \
        -bn "${BUCKET_NAME}" \
        --src-dir build \
        --overwrite \
        --content-type auto \
        --verify-checksum
      echo "✅ Upload completed to bucket ${BUCKET_NAME}"

