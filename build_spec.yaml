version: 0.1
component: build
timeoutInSeconds: 1800
runAs: root
shell: bash

env:
  variables:
    # ── adjust these ─────────────────────────────────────────────
    NODE_VERSION: "22"              # or "20" if your app needs it
    BUCKET_NAME: "my-react-site"    # your Object Storage bucket
    # REGION is optional; CLI reads it from instance metadata when using resource principals
    # ────────────────────────────────────────────────────────────

steps:
  - name: Métricas iniciales (CPU/RAM/Disco)
    type: Command
    command: |
      set -euo pipefail
      echo "=== METRICAS INICIALES ==="
      echo "CPUs: $(nproc)"
      echo "Memoria (MB):"
      free -m || true
      echo "Disco:"
      df -h || true
      echo "Top snapshot:"
      top -b -n 1 | head -n 20 || true

  - name: Instalar Node.js
    type: Command
    command: |
      set -euo pipefail
      # On OL8 managed runners, Node via module streams works well
      dnf -y module enable nodejs:${NODE_VERSION}
      dnf -y module install nodejs:${NODE_VERSION}
      node -v && npm -v

  - name: Instalar dependencias
    type: Command
    command: |
      set -euo pipefail
      npm ci

  - name: Compilar aplicación
    type: Command
    command: |
      set -euo pipefail
      npm run build

  - name: Métricas post-build
    type: Command
    command: |
      set -euo pipefail
      echo "=== METRICAS POST-BUILD ==="
      echo "Memoria (MB):"
      free -m || true
      echo "Disco:"
      df -h || true

  - name: Subir a Object Storage
    type: Command
    command: |
      set -euo pipefail

      # Ensure OCI CLI is available (usually preinstalled; install if missing)
      if ! command -v oci >/dev/null 2>&1; then
        echo "Installing OCI CLI..."
        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh -o /tmp/oci-install.sh
        bash /tmp/oci-install.sh --accept-all-defaults --install-dir /usr/local/bin
        export PATH="$PATH:/root/bin"
      fi
      oci --version

      # Use the DevOps runner resource principal for auth
      export OCI_CLI_AUTH=resource_principal

      # Sanity check auth (lists one compartment, discards output)
      oci iam compartment list --limit 1 >/dev/null

      echo "Uploading React build to bucket: ${BUCKET_NAME}"
      # If bucket is empty this delete will no-op; ignore errors
      oci os object bulk-delete -bn "${BUCKET_NAME}" --force --quiet || true

      # Upload build/ with correct content-types
      oci os object bulk-upload \
        -bn "${BUCKET_NAME}" \
        --src-dir build \
        --overwrite \
        --content-type auto \
        --verify-checksum

      echo "✅ Upload completed to bucket ${BUCKET_NAME}"

